package guicontact;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;

public class ContactDAO {//변수선언-db 연동종료기능-기능메서드구현
	private Connection conn;
	private PreparedStatement pst;
	private ResultSet rs;

	public void connection() { //db연결기능--프로젝트 공통코드
		try { //고정적으로 계속 쓰이는것 복사코드
			String ur1="jdbc:oracle:thin:@localhost:1521:xe"; //localhost부분을 아이피주소로 바꾸면 팀원모두 db서버에 접근 가능
			String user="hr";
			String password="hr";
			
			//1. JDBC 드라이버 로딩(동적로딩)
			Class.forName("oracle.jdbc.driver.OracleDriver");//이 구문을 실행했을때 해당 파일이 있는지 없는지 확인.복사쓰기 외울필요x
			//2. DB 연결
			conn=DriverManager.getConnection(ur1 , user, password);// 아까 db 커넥션의 propertise 정보
			
			if(conn==null) {
				System.out.println("db연결 실패");
			}else {
				System.out.println("db연결 성공");
			}
			//3. DB에 보낼 Query문 작성
			//PreparedStatement:자바프로그램과 sql사이에 데이터를 전송할수있는 통로를 만들어주는 역할
			//인터페이스 클래스임으로 객체를 생성할수없음
		} catch (ClassNotFoundException e) {
			e.printStackTrace(); //오류메시지 출력
		} catch (SQLException e) {
			e.printStackTrace();
		} 
		
	}
	
	//db종료하는 기능    - --프로젝트 공통사항코드
	public void close() {
	    try {
	    	if(rs !=null) { rs.close();}
			if(pst != null) {pst.close();}
			if(conn !=null) {conn.close();}
		}catch (SQLException e) {
			e.printStackTrace();
		}	
	}
	
	//기능정의:연락처추가,삭제,전체연락처보기
	
	//순서:db연결-sql작성문 및 넘겨주기prapared-sql문이 틀릴수도있기에 예외처리문-
	public void addContact(ContactVO vo) {//연락처추가
		
		connection();
		
		String sql="insert into contact values(?,?,?)";
		try {
			pst=conn.prepareStatement(sql);
		} catch (Exception e) {
			// TODO: handle exception
		}
	}
	
	
	
	
}
